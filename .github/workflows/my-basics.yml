name: My-GitHubAction-Basic

on:
  push:
    
jobs:
  my_testing:
    runs-on: ubuntu-latest
  
    steps:
    - name: Git clone my repository
      uses: actions/checkout@v1
      
    - name: Install python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
        architecture: 'x64'
        
    - name: Install pytest
#       uses: actions/setup-pytest@v1
      run: pip install pytest
      
    - name: View repository files
      run: ls -a
      
    - name: Python Style Checker
      uses: andymckay/pycodestyle-action@0.1.3
        
    - name: Run tests
      run: pytest -v -s tests.py
        
  CI:
    runs-on: ubuntu-latest
    needs: my_testing
    
    steps:
    
    - name: Print something
      run: echo "Test"
    - name: Git clone my repository
      uses: actions/checkout@v1
      
    - name: View repository files
      run: ls -a
    
    - name: Work With Docker
      run:  echo "${{ secrets.DOCKER_PWD }}" | docker login -u "${{ secrets.DOCKER_LOGIN }}" --password-stdin
    - name: Build image
      run: docker build -t ${{ secrets.IMAGE }}:latest -f Dockerfile .
    - name: Push image to docker
      run: docker push ${{ secrets.IMAGE }}:latest
  CD:
    needs: CI
    runs-on: localhost  
    steps:
       - name: Stop docker
         run: docker stop /phonebook
         continue-on-error: true
       - name: Kill old docker
         run: docker rm /phonebook
         continue-on-error: true
       - name: Run Project
         run: docker run -d -p 5000:5000 --name phonebook ${{ secrets.IMAGE }}:latest
       - name: Test
         run: (echo "5" && echo "8") | docker run -i --rm thisisdasha/phonebook > artifacts.txt
       - name: Artifacts
         uses: actions/upload-artifact@v2
         with:
          name: my-artifact
          path: artifacts.txt
